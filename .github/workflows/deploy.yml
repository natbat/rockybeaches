name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
    - main
  schedule:
    - cron: '41 0,12 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repo
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - uses: actions/cache@v2
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt
    - name: Backup Airtable to airtable/
      env:
        AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}
        AIRTABLE_KEY: ${{ secrets.AIRTABLE_KEY }}
      run: |-
        airtable-export airtable $AIRTABLE_BASE_ID tidepool_areas -v --user-agent "curl/7.64.1"
    - name: Commit and push if it changed
      run: |-
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        git add -A
        timestamp=$(date -u)
        git commit -m "Latest data: ${timestamp}" || exit 0
        git push
    - name: Build database
      run: script/build
    - name: Run tests
      run: script/test
    - name: Deploy to Vercel
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      run: |-
        datasette publish vercel data.db \
          --token $VERCEL_TOKEN \
          --metadata metadata.yml \
          --project tidepools-near-me \
          --scope datasette \
          --install datasette-template-sql \
          --install "datasette-graphql>=1.0.1" \
          --install datasette-cluster-map \
          --install astral \
          --static static:static \
          --template-dir templates \
          --plugins-dir plugins \
          --setting max_returned_rows 2000
